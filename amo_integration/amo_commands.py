"""
–ú–æ–¥—É–ª—å –∫–æ–º–∞–Ω–¥ —Ä–∞–±–æ—Ç—ã —Å AMO CRM
"""
import logging
from datetime import datetime

from amocrm.v2 import Lead as _Lead, custom_field
from asgiref.sync import sync_to_async

from amo_integration.connect_api_amo import connect_amo

logger = logging.getLogger(__name__)


class Lead(_Lead):
    """
    –ö–ª–∞—Å—Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–æ–ª–µ–π —Å –¥–∞–Ω–Ω—ã–º–∏ –ê–ú–û
    """
    source_phone = custom_field.TextCustomField("Source_phone")
    rec_date = custom_field.TextCustomField("–î–∞—Ç–∞ –∑–∞–ø–∏—Å–∏")
    rec_time = custom_field.TextCustomField("–í—Ä–µ–º—è –∑–∞–ø–∏—Å–∏")
    doctor = custom_field.TextCustomField("–§–ò–û –≤—Ä–∞—á–∞")


@sync_to_async()
def add_contact(name: str, phone: str) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ê–ú–û
    """
    name = f"{name} {phone}"
    connect_amo()
    create_contact = Lead.objects.create(name=name)
    create_contact.source_phone = phone
    create_contact.tags.append("–¢–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç")
    create_contact.save()
    logger.info(f"{name} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –ê–ú–û")


def info(phone):
    """
    –§—É–Ω–∫—Ü–∏—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–ø–∏—Å–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ê–ú–û
    """
    connect_amo()
    try:
        lead = Lead.objects.get(query=phone)
        date = datetime.fromtimestamp(lead.rec_date).strftime("%d.%m.%Y")
        time_ = lead.rec_time
        doctor = lead.doctor
        return f"–í—ã –∑–∞–ø–∏—Å–∞–Ω—ã {date} –Ω–∞ {time_} –∫ –¥–æ–∫—Ç–æ—Ä—É {doctor}"
    except StopIteration as error:
        logger.error(error)
        text_story_recording = "–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –í–∞—Å –Ω–µ—Ç –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö " \
                               "–ø—Ä–∏–µ–º–æ–≤ –≤ –Ω–∞—à–µ–π –ö–ª–∏–Ω–∏–∫–µ.\n" \
                               "–î–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É 'üåê–û–Ω–ª–∞–π–Ω –∑–∞–ø–∏—Å—å'"
        return text_story_recording
